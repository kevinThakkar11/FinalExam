# -*- coding: utf-8 -*-
"""notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pAE965c8PFTmDbuiIIZaZoPly9ymvmf0
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import random



def upload_data():
    file_path = input("Enter the file path of the CSV file (leave empty to manually enter data): ")
    if file_path:
        try:
            data = pd.read_csv(file_path)
        except FileNotFoundError:
            print("File not found. Please try again.")
            return upload_data()
    else:
        data = enter_data_manually()
    return data

def enter_data_manually():
    print("Enter your data below (press Enter after each row, type 'done' when finished):")
    data_rows = []
    headers = input("Enter column headers separated by commas: ").split(',')
    while True:
        row = input().split(',')
        if row == ['done']:
            break
        if len(row) != len(headers):
            print("Incorrect number of columns. Please enter again.")
            continue
        data_rows.append(row)
    data = pd.DataFrame(data_rows, columns=headers)
    return data

def analyze_data(data):
    print("Analysis Results:")
    print("-"*20)
    print("Summary Statistics:")
    print(data.describe())
    print("\n")
    print("Data Head:")
    print(data.head())

def visualize_data(data):
    print("Visualization Charts:")
    print("-"*20)
    scatter_plot(data)
    histogram(data)
    bar_chart(data)

def scatter_plot(data):
    random_number1 = random.randint(0, 12)
    random_number2 = random.randint(0, 12)

    # Ensure the two numbers are different
    while random_number2 == random_number1:
        random_number2 = random.randint(0, 12)

    x_column = data.columns[random_number1]
    y_column = data.columns[random_number2]
    data.plot.scatter(x=x_column, y=y_column)
    plt.title("Scatter Plot")
    plt.show()

def histogram(data):
    random_number1 = random.randint(0, 12)
    column = data.columns[random_number1]
    data[column].astype(float).plot.hist()
    plt.title("Histogram")
    plt.show()

def bar_chart(data):
    """
    Generate a bar chart from the given DataFrame.

    Parameters:
        data (DataFrame): The DataFrame containing the data.
        x_column (str): The column name for the x-axis.
        y_column (str): The column name for the y-axis.
        title (str): The title of the bar chart.

    Returns:
        None
    """
    plt.figure(figsize=(10, 6))
    plt.bar(data.index, data["price"])
    plt.title("title")
    plt.xlabel("x_column")
    plt.ylabel("y_column")
    plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
    plt.tight_layout()
    plt.show()


def main():
    print("Welcome to the Data Analysis App")
    print("-"*30)
    data = upload_data()
    analyze_data(data)
    visualize_data(data)


if __name__ == "__main__":
    main()



